name: CI/CD Dev Pipeline

on:
  push:
    branches: [ 'main' ]

env:
  REGISTRY: ghcr.io

jobs:
  time-reactor:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: MlFlow Build
            dockerfile: ./mlflow/Dockerfile
            image: ${{ github.repository }}/mlflow
            tag:  ghcr.io/galaksiyait/timereactor/mlflow:v1.0.0-RC1, ghcr.io/galaksiyait/timereactor/mlflow:latest
            condition: ${{ contains(github.event.head_commit.message, '[build mlflow]') }}
          - name: Training Api Build
            dockerfile: ./modeloperator/Dockerfile
            image: ${{ github.repository }}/training-api
            tag: ghcr.io/galaksiyait/timereactor/training-api:v1.0.0-RC5, ghcr.io/galaksiyait/timereactor/training-api:latest
            condition: ${{ contains(github.event.head_commit.message, '[build model]') }}
          - name: Streamlit Application Build
            dockerfile: ./streamlit_app/Dockerfile
            image: ${{ github.repository }}/app
            tag: ghcr.io/galaksiyait/timereactor/app:v1.0.0-RC5, ghcr.io/galaksiyait/timereactor/app:latest
            condition: ${{ contains(github.event.head_commit.message, '[build streamlit]') }}
          - name: Time Reactor Api Build
            dockerfile: ./timereactorapi/Dockerfile
            image: ${{ github.repository }}/timereactor-api
            tag: ghcr.io/galaksiyait/timereactor/timereactor-api:v1.0.0-RC6, ghcr.io/galaksiyait/timereactor/timereactor-api:latest
            condition: ${{ contains(github.event.head_commit.message, '[build api]') }}
          - name: Model Registry Build
            dockerfile: ./mlflow_model_registry/Dockerfile
            image: ${{ github.repository }}/model-registry
            tag: ghcr.io/galaksiyait/timereactor/model-registry:v1.0.0-RC2, ghcr.io/galaksiyait/timereactor/model-registry:latest
            condition: ${{ contains(github.event.head_commit.message, '[build mlflow_model]') }}
          - name: Airflow Build
            dockerfile: ./airflow/Dockerfile
            image: ${{ github.repository }}/airflow
            tag: ghcr.io/galaksiyait/timereactor/airflow:v1.0.0-RC1, ghcr.io/galaksiyait/timereactor/airflow:latest
            condition: ${{ contains(github.event.head_commit.message, '[build airflow]') }}
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        if: matrix.condition == 'true' || !matrix.condition
        uses: actions/checkout@v4
      - name: Print environment variables
        run: |
          echo "Building component: ${{ matrix.name }}"
          echo "REGISTRY: ${{ env.REGISTRY }}"
          echo "dockerfile: ${{ matrix.dockerfile }}"
          echo "image: ${{ matrix.image }}"
          echo "tag: ${{ matrix.tag }}"